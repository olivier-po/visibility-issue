/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';


declare global {

  namespace StencilComponents {
    interface ButtonClickIssueComp {

    }
  }

  interface HTMLButtonClickIssueCompElement extends StencilComponents.ButtonClickIssueComp, HTMLStencilElement {}

  var HTMLButtonClickIssueCompElement: {
    prototype: HTMLButtonClickIssueCompElement;
    new (): HTMLButtonClickIssueCompElement;
  };
  interface HTMLElementTagNameMap {
    'button-click-issue-comp': HTMLButtonClickIssueCompElement;
  }
  interface ElementTagNameMap {
    'button-click-issue-comp': HTMLButtonClickIssueCompElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'button-click-issue-comp': JSXElements.ButtonClickIssueCompAttributes;
    }
  }
  namespace JSXElements {
    export interface ButtonClickIssueCompAttributes extends HTMLAttributes {
      'onButtonClicked'?: (event: CustomEvent) => void;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
